{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuel/code/LEARN REACT/jokesApp/src/components/Joke.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Joke(prop) {\n  let setup = \"\";\n  let punchline = \"\"; //error handling\n\n  if (prop.question == null) {\n    setup = \"NO SETUP GIVEN\";\n  } else {\n    setup = \"Set Up: \" + prop.question;\n  }\n\n  if (prop.answer = null) {\n    punchline = \"NO PUNCHILNE GIVEN\";\n  } else {\n    punchline = \"Punchline: \" + prop.answer;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Joke\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Question\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: setup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 39\n      }, this), \" \", prop.question, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Answer\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: punchline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 37\n      }, this), \" \", prop.answer, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Joke;\nexport default Joke;\n\nvar _c;\n\n$RefreshReg$(_c, \"Joke\");","map":{"version":3,"sources":["/Users/emmanuel/code/LEARN REACT/jokesApp/src/components/Joke.js"],"names":["React","ReactDOM","Joke","prop","setup","punchline","question","answer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAEhB,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAS,GAAG,EAAhB,CAHgB,CAIhB;;AACA,MAAIF,IAAI,CAACG,QAAL,IAAiB,IAArB,EAA2B;AACvBF,IAAAA,KAAK,GAAG,gBAAR;AACH,GAFD,MAEO;AACHA,IAAAA,KAAK,GAAG,aAAaD,IAAI,CAACG,QAA1B;AACH;;AAED,MAAIH,IAAI,CAACI,MAAL,GAAc,IAAlB,EAAwB;AACpBF,IAAAA,SAAS,GAAG,oBAAZ;AACH,GAFD,MAEO;AACHA,IAAAA,SAAS,GAAG,gBAAgBF,IAAI,CAACI,MAAjC;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,mCAA0B;AAAA,kBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,cAA1B,OAA0CD,IAAI,CAACG,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,mCAAwB;AAAA,kBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAxB,OAA4CF,IAAI,CAACI,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KAxBQL,I;AA0BT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction Joke(prop) {\n\n    let setup = \"\";\n    let punchline = \"\";\n    //error handling\n    if (prop.question == null) {\n        setup = \"NO SETUP GIVEN\";\n    } else {\n        setup = \"Set Up: \" + prop.question;\n    } \n    \n    if (prop.answer = null) {\n        punchline = \"NO PUNCHILNE GIVEN\"\n    } else {\n        punchline = \"Punchline: \" + prop.answer;\n    }\n\n    return (\n        <div className=\"Joke\">\n            <h1 className=\"Question\"> <b>{setup}</b> {prop.question} </h1>\n            <h2 className=\"Answer\"> <b>{punchline}</b> {prop.answer} </h2>\n        </div>\n    )\n\n}\n\nexport default Joke;"]},"metadata":{},"sourceType":"module"}